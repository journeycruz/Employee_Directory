{"version":3,"sources":["components/logo.svg","components/Navbar.jsx","components/Wrapper.jsx","components/EmployeeTable.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","navbar","css","Navbar","className","Wrapper","props","wrapper","children","arrow","EmployeeTable","state","items","loading","search","onSort","bind","fetch","then","response","json","setState","results","event","sortKey","this","sort","a","b","name","last","localeCompare","email","target","value","substr","filteredEmployees","filter","first","toLowerCase","indexOf","htmlFor","id","onChange","updateSearch","type","placeholder","Table","responsive","striped","bordered","hover","onClick","e","map","item","src","picture","medium","alt","location","street","number","city","Component","Footer","color","fluid","md","logo","rel","href","Date","getFullYear","App","rootElement","document","getElementById","ReactDOM","render","Boolean","window","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd06dec8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.26ef1cbc.svg\";","import React from \"react\";\nimport { css } from \"emotion\";\n\nconst navbar = css`\n  .navbar {\n    color: white;\n    background-color: #323741;\n    border-bottom: 3px solid #A60311;\n    height: 10rem;\n  }\n  .navbar-brand {\n    font-size: xx-large;\n  }\n`\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <div className={navbar}>\n      <nav className=\"navbar navbar-expand-lg  justify-content-center\">\n        <div className=\"navbar-brand\">\n          Employee Directory\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { css } from \"emotion\";\n\nfunction Wrapper(props) {\n\n  const wrapper = css`\n    padding-top: 50px;\n    height: 100%;\n    flex-flow: row wrap;\n    padding: 20px;\n    justify-content: space-around;\n    align-content: flex-start;\n    overflow: auto;\n    border-bottom: 2px solid red;\n  }`\n\n  return <div className={wrapper}>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport { Table } from \"react-bootstrap\";\nimport { css } from \"emotion\";\n\nconst arrow = css`\n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    outline: none\n    cursor:pointer;\n    overflow: hidden;      \n`\n\n\nclass EmployeeTable extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: [],\n            loading: false,\n            search: '',\n        }\n        this.onSort = this.onSort.bind(this)\n    }\n\n    componentDidMount() {\n        fetch(\"https://randomuser.me/api/?results=20\")\n            .then((response) => response.json())\n            .then((response) => this.setState({\n                items: response.results,\n                loading: true,\n            }));\n    }\n\n    onSort(event, sortKey) {\n        const items = this.state.items;\n        switch (sortKey) {\n            case \"name.lastAsc\": \n                items.sort((a, b) => a.name.last.localeCompare(b.name.last))\n                break;\n            default:\n                break;\n            case \"name.lastDesc\":\n                items.sort((b, a) => a.name.last.localeCompare(b.name.last))\n                break;\n            case \"emailAsc\":\n                items.sort((a, b) => a.email.localeCompare(b.email))\n                break;\n            case \"emailDesc\":\n                items.sort((b, a) => a.email.localeCompare(b.email))\n                break;\n        }\n        this.setState({items})\n    }\n\n    updateSearch(event) {\n        this.setState({ search: event.target.value.substr(0, 20) });\n        \n    }\n\n    render() {\n        var { items, loading } = this.state;\n        if (!loading) {\n            return (\n                <div>Loading...</div>\n            )\n        }\n        else {\n            let filteredEmployees = items.filter(\n                (items) => {\n                    return items.name.first.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1; \n                }\n            );\n            return (\n                <div className=\"container\">\n                    <form className=\"search\">\n                <div className=\"form-inline justify-content-center\">\n                    <label htmlFor=\"language\" id=\"formLabel\">Find Employee:&nbsp;</label>\n                    <input\n                    value={this.state.search}\n                    onChange={this.updateSearch.bind(this)}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type to start searching\"\n                    id=\"nameInput\"\n                    />&nbsp;\n                    {/*<button id=\"searchButton\" type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n                    Search\n                    </button>*/}\n                        </div>\n                        <br />\n                        <br />\n                </form>\n                    <Table responsive striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Picture</th>\n                            <th>ID #</th>\n                            <th>Name&nbsp;<button className={arrow} onClick={e => this.onSort(e, 'name.lastAsc')}><i className=\"fas fa-sort-alpha-down\"></i></button><button className={arrow} onClick={e => this.onSort(e, 'name.lastDesc')}><i className=\"fas fa-sort-alpha-down-alt\"></i></button></th>\n                            <th>Email&nbsp;<button className={arrow} onClick={e => this.onSort(e, 'emailAsc')}><i className=\"fas fa-sort-alpha-down\"></i></button><button className={arrow} onClick={e => this.onSort(e, 'emailDesc')}><i className=\"fas fa-sort-alpha-down-alt\"></i></button></th>\n                            <th>Location (City, State)</th>\n                            </tr>\n                        </thead>\n                        {filteredEmployees.map(item => (\n                            <tbody>\n                                <tr>\n                                    <td><img src={item.picture.medium} alt={item.name.first} /></td>\n                                    <td>{item.location.street.number}</td>\n                                    <td>{item.name.first}&nbsp;{item.name.last}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.location.city},&nbsp;{item.location.state}</td>\n                                </tr>\n                            </tbody>\n                        ))}\n                    </Table>\n                </div>\n                )\n            }\n        }\n};\n\nexport default EmployeeTable;","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\nimport logo from \"./logo.svg\";\n\n\nconst Footer = () => {\n  return (\n    <MDBFooter color=\"stylish-color-dark\" className=\"page-footer font-small\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\n              How it works:\n            </h5>\n            <p>\n              This web application makes a call to the Random User API to recieve user data and populate a responsive Bootstrap table. The table data can then be sorted and filtered by manipulating the properties saved to the components state.\n            </p>\n            <br />\n            <div>\n                Powered By:&nbsp; ReactJS<img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </div>\n          </MDBCol>\n          <hr className=\"clearfix w-100 d-md-none\" />\n          <MDBCol md=\"2\">\n\n          </MDBCol>\n          <hr className=\"clearfix w-100 d-md-none\" />\n          <MDBCol md=\"2\">\n            <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\n              License\n            </h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/journeycruz/React_Employee_Directory/blob/master/LICENSE\">MIT License</a>\n              </li>\n            </ul>\n          </MDBCol>\n          <hr className=\"clearfix w-100 d-md-none\" />\n          <MDBCol md=\"2\">\n            <h5 className=\"text-uppercase mb-4 mt-3 font-weight-bold\">\n              API\n            </h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://randomuser.me/\">Random User Generator</a>\n              </li>\n            </ul>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"text-center py-3\">\n      </div>\n      <hr />\n      <div className=\"text-center\">\n        <ul className=\"list-unstyled list-inline\">\n          <li className=\"list-inline-item\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/journeycruz\" className=\"btn-floating btn-sm btn-fb mx-1\">\n              <i className=\"fab fa-github\"></i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a href=\"mailto:journey.cruz@gmail.com\" className=\"btn-floating btn-sm btn-tw mx-1\">\n              <i className=\"fa fa-envelope\"> </i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/journey-cruz-32a0a695\" className=\"btn-floating btn-sm btn-gplus mx-1\">\n              <i className=\"fab fa-linkedin\"> </i>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://journeycruz.github.io/WebDevPortfolio/\"> Journey Cruz </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./components/Navbar.jsx\";\nimport Wrapper from \"./components/Wrapper.jsx\";\nimport EmployeeTable from \"./components/EmployeeTable.jsx\";\nimport Footer from \"./components/Footer.jsx\"\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <div className=\"row mr-0\">\n        </div>\n        <div className=\"row mr-0\">\n          <div className=\"col-md-12 pr-0\">\n            <Wrapper>\n              <div className=\"App\">\n                <br />\n                <EmployeeTable />\n              </div>\n            </Wrapper>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}